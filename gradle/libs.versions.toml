[versions]
agp = "8.6.1"
androidx-activityCompose = "1.10.1"
androidx-lifecycle = "2.7.0"
compose-multiplatform = "1.7.3"
kotlin = "2.1.10"
componentsResources = "1.7.3"
firebaseDatabase = "2.1.0"
firebaseStorage = "1.9.0"
kamelImage = "0.9.0"
kotlinLogging = "2.1.23"
kotlinxSerializationJson = "1.7.3"
lifecycle = "1.0.0"
multiplatformSettingsNoArg = "1.3.0"
playServicesAds = "24.2.0"


coroutines = "1.9.0"
kotlinx-datetime = "0.6.0"
ktor = "3.0.1"

stately = "2.0.6"
kermit = "2.0.4"
sqliter = "1.3.1"

hyperdrive = "0.1.148"

multiplatformSettings = "1.0.0"
sqlDelight = "2.0.2"
firebase-bom = "33.12.0"
firebase-crashlytics-gradle = "3.0.3"
compose-jb = "1.7.3"
compose = "1.7.3"

accompanistNavigationAnimation = "0.34.0"
splashscreen = "1.0.1"
korio = "4.0.10"

# Sample - Android
androidx-core = "1.16.0"
koin = "3.5.3"
uiGraphics = "1.7.3"
uuid = "0.8.3"
coil = "3.0.4"
voyagerNavigator = "1.0.0"
material3Android = "1.3.2"

[libraries]
gradle = { module = "com.android.tools.build:gradle", version.ref = "agp" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
kamel-image = { module = "media.kamel:kamel-image", version.ref = "kamelImage" }
components-resources = { module = "org.jetbrains.compose.components:components-resources", version.ref = "componentsResources" }
firebase-auth = { module = "dev.gitlive:firebase-auth", version.ref = "firebaseDatabase" }
firebase-firestore = { module = "dev.gitlive:firebase-firestore", version.ref = "firebaseDatabase" }
firebase-storage = { module = "dev.gitlive:firebase-storage", version.ref = "firebaseStorage" }
gitlive-firebase-database = { module = "dev.gitlive:firebase-database", version.ref = "firebaseDatabase" }
google-firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
kotlin-logging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlinLogging" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "lifecycle" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettingsNoArg" }
play-services-ads = { module = "com.google.android.gms:play-services-ads", version.ref = "playServicesAds" }
sqliter = { module = "co.touchlab:sqliter-driver", version.ref = "sqliter" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" }

accompanist-navigationAnimation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanistNavigationAnimation" }
hyperdrive-multiplatformx-api = { module = "org.brightify.hyperdrive:multiplatformx-api", version.ref = "hyperdrive" }
ui-graphics = { module = "org.jetbrains.compose.ui:ui-graphics", version.ref = "uiGraphics" }
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }
korio = { module = "com.soywiz.korlibs.korio:korio", version.ref = "korio" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }

multiplatformSettings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettings" }

sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqldelight-driver-ios = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }

kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
kermit-crashlytics = { module = "co.touchlab:kermit-crashlytics", version.ref = "kermit" }
stately-common = { module = "co.touchlab:stately-common", version.ref = "stately" }

# Sample - Android
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
compose-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "compose" }
compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "org.jetbrains.compose.material:material", version.ref = "compose" }

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }

voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyagerNavigator" }
androidx-material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3Android" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebase-crashlytics-gradle" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-jb" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

[bundles]
ktor-common = ["ktor-client-core", "ktor-client-logging", "ktor-client-serialization", "ktor-client-contentNegotiation"]

androidx-compose = [
    "compose-ui",
    "compose-foundation",
    "compose-material",
]

sqldelight-common = [
    "sqldelight-runtime",
    "sqldelight-coroutines"
]